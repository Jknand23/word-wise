rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Suggestions can be read only by the user who owns them.
    // A user can create, update, or delete suggestions for their own documents.
    match /suggestions/{suggestionId} {
      allow list, read, update, delete: if request.auth.uid == resource.data.userId;
      allow create: if request.auth.uid == request.resource.data.userId;
    }
    
    // Allow authenticated users to manage their rate limits
    match /rateLimits/{userId} {
      allow read, write: if request.auth.uid == userId;
    }
    
    // Allow authenticated users to manage their modification tracking
    match /modifiedAreas/{areaId} {
      allow read, write, delete: if request.auth != null && (
        (resource.data != null && request.auth.uid == resource.data.userId) ||
        (request.resource.data != null && request.auth.uid == request.resource.data.userId)
      );
      allow create: if request.auth != null && request.auth.uid == request.resource.data.userId;
      // Allow list operations for authenticated users to debug
      allow list: if request.auth != null;
    }
    
    // Allow authenticated users to read/write their own documents metadata
    match /documents/{documentId} {
      allow read, write: if request.auth != null && request.auth.uid == resource.data.userId;
      allow create: if request.auth != null && request.auth.uid == request.resource.data.userId;
      // Temporarily allow list operations for authenticated users to debug
      allow list: if request.auth != null;
    }

    // Allow authenticated users to manage their own documents
    match /documents/{userId}/{documentId} {
      allow read, write, create, delete: if request.auth != null && request.auth.uid == userId;
    }

    // Allow authenticated users to manage their own rubrics
    match /rubrics/{rubricId} {
      allow read, write: if request.auth != null && request.auth.uid == resource.data.userId;
      allow create: if request.auth != null && request.auth.uid == request.resource.data.userId;
      allow delete: if request.auth != null && request.auth.uid == resource.data.userId;
      allow list: if request.auth != null;
    }

    // Allow authenticated users to manage their own rubric feedback
    match /rubricFeedback/{feedbackId} {
      allow read, write: if request.auth != null && request.auth.uid == resource.data.userId;
      allow create: if request.auth != null && request.auth.uid == request.resource.data.userId;
      allow list: if request.auth != null;
    }

    // Allow authenticated users to manage their own essay structures
    match /essayStructures/{structureId} {
      allow read, write: if request.auth != null && request.auth.uid == resource.data.userId;
      allow create: if request.auth != null && request.auth.uid == request.resource.data.userId;
    }

    // Allow authenticated users to manage their own paragraph tags
    match /paragraphTags/{tagId} {
      allow read, write: if request.auth != null && request.auth.uid == resource.data.userId;
      allow create: if request.auth != null && request.auth.uid == request.resource.data.userId;
      allow delete: if request.auth != null && request.auth.uid == resource.data.userId;
      allow list: if request.auth != null;
    }

    // Allow authenticated users to manage their own progress settings
    match /userProgressSettings/{userId} {
      allow read, write, create, update: if request.auth != null && request.auth.uid == userId;
    }

    // Allow authenticated users to manage their own document quality metrics
    match /documentQualityMetrics/{metricId} {
      allow read, write, create, update: if request.auth != null && (
        (resource.data != null && request.auth.uid == resource.data.userId) ||
        (request.resource.data != null && request.auth.uid == request.resource.data.userId)
      );
      allow list: if request.auth != null;
    }

    // Allow authenticated users to manage their own analysis cache
    match /analysisCache/{cacheId} {
      // User can read or delete their own cache entries.
      allow read, delete: if request.auth.uid == resource.data.metadata.userId;

      // User can create cache entries for themselves.
      allow create: if request.auth.uid == request.resource.data.metadata.userId;

      // User can update their own entries and cannot change ownership.
      allow update: if request.auth.uid == resource.data.metadata.userId &&
                     request.auth.uid == request.resource.data.metadata.userId;
      
      // Allow users to query for their own cache entries.
      allow list: if request.auth != null;
    }

    // Allow authenticated users to manage their own document changes tracking
    match /documentChanges/{changeId} {
      allow read, write, create, update: if request.auth != null && (
        (resource.data != null && request.auth.uid == resource.data.userId) ||
        (request.resource.data != null && request.auth.uid == request.resource.data.userId)
      );
      allow list: if request.auth != null;
    }

    // Allow authenticated users to manage their own differential analysis metrics
    match /differentialAnalysisMetrics/{metricId} {
      allow read, write, create, update: if request.auth != null && (
        (resource.data != null && request.auth.uid == resource.data.userId) ||
        (request.resource.data != null && request.auth.uid == request.resource.data.userId)
      );
      allow list: if request.auth != null;
    }

    // A user can create, read and update their own profile.
    match /users/{userId} {
      allow read, update: if request.auth.uid == userId;
      allow create: if request.auth.uid != null;
    }
  }
} 